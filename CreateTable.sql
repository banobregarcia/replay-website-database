CREATE TABLE UTILISATEUR(
  idUser INTEGER NOT NULL,
  login VARCHAR2(42) NOT NULL,
  mot_de_passe VARCHAR2(42) NOT NULL,
  nom VARCHAR2(42) NOT NULL,
  prenom VARCHAR2(42) NOT NULL,
  date_de_naissance DATE NOT NULL,
  adresse_mail VARCHAR2(42) NOT NULL,
  nationalite VARCHAR2(42) NOT NULL,
  abonne_newsletter CHAR(1) DEFAULT 'N' NOT NULL, -- N si non, si O oui
  CONSTRAINT PK_USER_idUser PRIMARY KEY (idUser),
  CONSTRAINT CK_USER_adresse_mail CHECK (adresse_mail LIKE '%_@_%'),
  CONSTRAINT CK_USER_abonne_newsletter CHECK (abonne_newsletter IN ('O','N'))
);

CREATE TABLE CATEGORIE (
 idCategorie INTEGER NOT NULL,
 nomCategorie VARCHAR2(42) NOT NULL,
 CONSTRAINT PK_CATEGORIE_idCategorie PRIMARY KEY (idCategorie)
);

CREATE TABLE EMISSION (
  idEmission INTEGER NOT NULL,
  nomEmission VARCHAR2(42) NOT NULL,
  idCategorie INTEGER NOT NULL,
  nbEpisodes INTEGER DEFAULT 0 NOT NULL,
  CONSTRAINT PK_EMISSION_idEmission PRIMARY KEY (idEmission),
  CONSTRAINT FK_EMISSION_idCategorie FOREIGN KEY (idCategorie) REFERENCES CATEGORIE ON DELETE CASCADE,
  CONSTRAINT CK_EMISSION_idCategorie CHECK (idCategorie >= 1 AND idCategorie <= 9)
);

CREATE TABLE VIDEO (
  idEmission INTEGER NOT NULL,
  idVideo INTEGER NOT NULL,
  nomVideo VARCHAR2(42) NOT NULL,
  descript VARCHAR2(128) NOT NULL,
  duree INTEGER NOT NULL,
  anneepremierediff INTEGER NOT NULL,
  pays VARCHAR2(20),
  multiLangue CHAR(1) DEFAULT 'N' NOT NULL, -- N si non, si O oui
  formatImage VARCHAR2(42) DEFAULT '4/3',
  CONSTRAINT PK_VIDEO_idVideo PRIMARY KEY (idVideo),
  CONSTRAINT FK_VIDEO_idEmission FOREIGN KEY (idEmission) REFERENCES EMISSION ON DELETE CASCADE,
  CONSTRAINT CK_VIDEO_multilangue CHECK (multilangue IN ('O','N'))
);

CREATE TABLE HISTORIQUE (
  idUser INTEGER NOT NULL,
  idEmission INTEGER NOT NULL,
  idVideo INTEGER NOT NULL,
  dateRep DATE DEFAULT CURRENT_DATE NOT NULL,
  CONSTRAINT PK_HISTORIQUE PRIMARY KEY (idUser, idEmission, idVideo,dateRep),
  CONSTRAINT FK_HISTORIQUE_idUser FOREIGN KEY (idUser) REFERENCES UTILISATEUR ON DELETE CASCADE,
  CONSTRAINT FK_HISTORIQUE_idEmission FOREIGN KEY (idEmission) REFERENCES EMISSION ON DELETE CASCADE,
  CONSTRAINT FK_HISTORIQUE_idVideo FOREIGN KEY (idVideo) REFERENCES VIDEO ON DELETE CASCADE
);

CREATE TABLE ARCHIVE_VIDEO (
  idEmission INTEGER NOT NULL,
  idVideo INTEGER NOT NULL,
  nomVideo VARCHAR2(42) NOT NULL,
  descript VARCHAR2(128) NOT NULL,
  duree INTEGER NOT NULL,
  anneepremierediff INTEGER NOT NULL,
  pays VARCHAR2(20),
  multiLangue CHAR(1) DEFAULT 'N' NOT NULL, -- N si non, si O oui
  formatImage VARCHAR2(42),
  dateDelete DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT PK_ARCHIVE_VIDEO_idVideo PRIMARY KEY (idVideo),
  CONSTRAINT FK_ARCHIVE_VIDEO_idEmission FOREIGN KEY (idEmission) REFERENCES EMISSION ON DELETE CASCADE,
  CONSTRAINT CK_ARCHIVE_VIDEO_multilangue CHECK (multilangue IN ('O','N'))
);

--TABLES DE LIAISON

CREATE TABLE VIDEO_EMISSION (
    idEmission INTEGER NOT NULL,
    idVideo INTEGER NOT NULL,
    CONSTRAINT PK_VIDEO_EMISSION PRIMARY KEY (idEmission, idVideo),
    CONSTRAINT FK_VIDEO_EMISSION_idEmssion FOREIGN KEY (idEmission) REFERENCES EMISSION ON DELETE CASCADE,
    CONSTRAINT FK_VIDEO_EMISSION_idVideo FOREIGN KEY (idVideo) REFERENCES VIDEO ON DELETE CASCADE
);
    

CREATE TABLE USER_FAVORIS_VIDEO (
  idUser INTEGER NOT NULL,
  idVideo INTEGER NOT NULL,
  CONSTRAINT PK_USER_FAVORIS_VIDEO PRIMARY KEY (idUser, idVideo),
  CONSTRAINT FK_USER_FAVORIS_VIDEO_idUser FOREIGN KEY (idUser) REFERENCES UTILISATEUR ON DELETE CASCADE,
  CONSTRAINT FK_USER_FAVORIS_VIDEO_idVideo FOREIGN KEY (idVideo) REFERENCES VIDEO ON DELETE CASCADE
);

CREATE TABLE USER_ABONNE_EMISSION (
  idUser INTEGER NOT NULL,  
  idEmission INTEGER NOT NULL,
  CONSTRAINT PK_USER_ABONNE_EMISSION PRIMARY KEY (idUser, idEmission),
  CONSTRAINT FK_USER_ABONNE_EMISSION_idUser FOREIGN KEY (idUser) REFERENCES UTILISATEUR ON DELETE CASCADE,
  CONSTRAINT FK_USER_ABONNE_EMISSION_idE FOREIGN KEY (idEmission) REFERENCES EMISSION ON DELETE CASCADE
);

CREATE TABLE USER_AIME_CATEGORIE (
  idUser INTEGER NOT NULL,  
  idCategorie INTEGER NOT NULL,
  CONSTRAINT PK_USER_AIME_CATEGORIE PRIMARY KEY (idUser, idCategorie),
  CONSTRAINT FK_USER_AIME_CATEGORIE_idUser FOREIGN KEY (idUser) REFERENCES UTILISATEUR ON DELETE CASCADE,
  CONSTRAINT FK_USER_AIME_CATEGORIE_idCat FOREIGN KEY (idCategorie) REFERENCES CATEGORIE ON DELETE CASCADE
);

CREATE TABLE VIDEO_END_DISPONIBILITE (
  idVideo INTEGER NOT NULL,
  dateFin DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT PK_VIDEO_END_DISPONIBILITE PRIMARY KEY (idVideo),
  CONSTRAINT FK_VIDEO_END_DISPONIBILITE FOREIGN KEY (idVideo) REFERENCES VIDEO ON DELETE CASCADE
);

CREATE TABLE VIDEO_NEW_DISPONIBILITE (
  idVideo INTEGER NOT NULL,
  dateSortie DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT PK_VIDEO_NEW_DISPONIBILITE PRIMARY KEY (idVideo),
  CONSTRAINT FK_VIDEO_NEW_DISPONIBILITE FOREIGN KEY (idVideo) REFERENCES VIDEO ON DELETE CASCADE
);

CREATE TABLE SUGGESTIONS (
  idUser INTEGER NOT NULL,
  idVideo INTEGER NOT NULL,
  typeSug CHAR(2) DEFAULT 'NW' NOT NULL, --NW nouveau, FD findispo, PP populaire, FV favoris
  CONSTRAINT PK_SUGGESTIONS PRIMARY KEY (idUser,idVideo,typeSug),
  CONSTRAINT FK_SUGGESTIONS_idUser FOREIGN KEY (idUser) REFERENCES UTILISATEUR ON DELETE CASCADE,
  CONSTRAINT FK_SUGGESTIONS_idVideo FOREIGN KEY (idVideo) REFERENCES VIDEO ON DELETE CASCADE,
  CONSTRAINT CK_SUGGESTIONS_typeSug CHECK (typeSug IN ('NW','FD','PP','FV'))
);

